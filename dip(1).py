# -*- coding: utf-8 -*-
"""DIP(1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16iLTGoTwMrXvUZKPLmUylVOD5RXe8N3K
"""

from google.colab.patches import cv2_imshow
import cv2
import numpy as np

# Loading grayscale image
img = cv2.imread("lena_color.tif", cv2.IMREAD_GRAYSCALE)

# Performing bit plane slicing
planes = [np.zeros(img.shape, np.uint8) for i in range(8)]
for i in range(8):
 planes[i] = (img & (1 << i))

while True:
    print("\n****MENU***")
    print("Press 1 for all bit planes")
    print("Press 2 for desired images")
    print("Press 4 to Exit")
    choice = int(input("#Enter the Choice: "))

    if choice==1:
        for i in range(8):
             cv2_imshow(planes[i])

    elif choice==2:
         # Reconstructing and displaying  image of specified bit planes
        image_reconstructed_a = cv2.bitwise_or(planes[7], planes[6])
        cv2_imshow(image_reconstructed_a)
        image_reconstructed_b = cv2.bitwise_or(image_reconstructed_a, planes[5])
        cv2_imshow(image_reconstructed_b)
        image_reconstructed_c = cv2.bitwise_or(image_reconstructed_b, planes[4])
        cv2_imshow(image_reconstructed_c)

    elif choice==4:
        cv2.destroyAllWindows()
        exit()

cv2.waitKey(0)
cv2.destroyAllWindows()